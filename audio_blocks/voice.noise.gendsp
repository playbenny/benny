{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 4,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 134.0, 134.0, 1061.0, 595.0 ],
		"gridsize" : [ 15.0, 15.0 ],
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 687.0, 557.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 515.0, 14.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "onepole(input){\r\n\tHistory y0(0);\r\n\r\n\tParam cutoff(1000, max=20000, min=1);\r\n\r\n\tcoeff_a = clip(sin(abs(cutoff) * 2 * PI / samplerate), 0, 1);\r\n\tmix5 = mix(y0, input, coeff_a);\r\n\ty0 = fixdenorm(mix5);\r\n\treturn mix5;\r\n}\r\n\r\n//require \"filter_functions\";\r\nBuffer prm(\"voice_parameter_buffer\");\r\nHistory pink(0);\r\nHistory dark(0);\r\nHistory pois1(0);\r\nHistory pois(0);\r\n\t\r\nHistory at,su,de,cu,lo,ve,ac,cu_t,cu_a,cu_f,mgain,vcaoff,hpf,hpf_e;\r\nHistory ov(0);  //last non-zero velocity\r\nHistory oov(0); //just for detect change\r\nHistory otrig(0); //likewise\r\nHistory op(0); //old pitch\r\nHistory env(0);\r\nHistory attdone(1); \r\nHistory decdone(1); \r\nHistory target(0);\r\nHistory attrate(0.00001); \r\nHistory decrate(0.00001);\r\nHistory upda(0);\r\n\r\nHistory c2(0),c1(0),t2(0),t3(0),col;\r\n\r\nParam voice_offset(0);\r\nParam p(0,min=0,default=64,max=128);\r\nParam v(0);\r\nParam panic(0);\r\nParam latch(0);\r\nParam cont(1);\r\nParam damp(0);\r\n\r\ncursor_p += 0.00001/(voice_is+20);\r\n\r\nif(upda==0){\r\n\tupda=1;\r\n\tcol = 5.99*peek(prm,0+voice_offset, 0, channels=1);\r\n\tc2 = abs(col-5)/16;\r\n\tat = peek(prm, 1+voice_offset, 0, channels=1);\r\n\tat = ((at*at+0.0000000001)*10000);\r\n\tsu = peek(prm, 2+voice_offset, 0, channels=1);\r\n\tde = peek(prm, 3+voice_offset, 0, channels=1);\r\n\tde *= max(0.001, (1 - damp)*(1 - damp));\r\n\tde = ((de*de+0.0000000001)*10000);\r\n\tcu = peek(prm, 4+voice_offset, 0, channels=1);\r\n\tlo = peek(prm, 5+voice_offset, 0, channels=1);\r\n\tve = peek(prm, 6+voice_offset, 0, channels=1)*2 - 1;\r\n\tac = peek(prm, 7+voice_offset, 0, channels=1)*2 - 1;\r\n\tmgain = 4*peek(prm,8+voice_offset,0, channels=1)-2;\t\t\r\n\thpf = peek(prm,9+voice_offset,0, channels=1);\t\r\n\tvcaoff = 2*peek(prm,10+voice_offset,0, channels=1)-1;\t\t\r\n\tsame = peek(prm,11+voice_offset,0, channels=1)>0.5;\t\t\r\n\thpf_e = peek(prm,12+voice_offset,0, channels=1)*2 - 1;\t\t\r\n\thpf = (pow(10, hpf) - 1)*1111.1111111111111111111111111111;\r\n\thpf_e = (hpf_e>0) ? hpf_e * (5000/hpf) : hpf_e;\r\n\tcu_f=cu*4;\t\r\n\tcu_t=floor(cu_f);\r\n\tcu_f-=cu_t;\r\n\tcu_t+=1;\r\n\tcu_a=same ? cu_t : (5 - cu_t);\r\n\tt=1+abs(cu-0.45)*23;\r\n\tattrate=t/mstosamps(at);\r\n\tdecrate=-t/mstosamps(de);\t\r\n\t\r\n}\r\n\r\nupda = (upda + cont);// & 255;\r\nupda *= (upda < vectorsize);\r\n\r\n\r\nccol = col + in1;\r\nc1 = floor(ccol);\r\nt2 = ccol - c1;\r\nt3 = 1-t2;\r\n\r\nwhite = (noise() + noise() + noise() + noise() + noise() + noise() + noise() + noise())/6;\r\npink += 0.1*white - 0.01*pink;\r\ndark += 0.01* pink - dark*0.01;\r\nblue = white*white*white;\r\npois1 += white*c2;\r\nif(pois1> 1){\r\n\tpois=1;\r\n\tpois1=0;\r\n}else if(pois1< -1){\r\n\tpois=-1;\r\n\tpois1=0;\r\n}else{\r\n\tpois=0;\r\n}\r\n\r\n\r\nx=0;\r\nif(c1==0){\r\n\tx = t3*dark + t2*pink;\r\n}else if(c1==1){\r\n\tx = t3*pink + t2*white;\r\n}else if(c1==2){\r\n\tx = t3*white + t2*blue;\r\n}else if(c1==3){\r\n\tx = t3*blue + t2*pois;\r\n}else if(c1==4){\r\n\tx = t3*pois + t2*in2;\r\n}else{\r\n\tx = t3*in2 + t2*dark;\r\n}\r\nx = clip(x,-1,1);\r\n\r\ntrig=0;\r\nvi=0;\r\nif((delta(lo>0)>0)&&(env==0)){\r\n\tvi=1;\r\n\ttrig=1;\r\n\tupda=0;\r\n}\r\nlevscale = 0;\r\n\r\nif(v>0){\r\n\tlevscale = v * ve + (1-clip(ve,0,2));\r\n}\r\n\r\nif(su>0){\r\n\tvi += levscale; \r\n\tif(vi!=oov){ //follow behaviour\r\n\t\toov=vi;\r\n\t\tov=vi;\r\n\t\ttarget=vi;\r\n\t\tif(target<=env){\r\n\t\t\tattdone=1;\r\n\t\t\tdecdone=0;\r\n\t\t\tif((target == 0)&&(latch>2)) upda = 0;\r\n\t\t}else{\r\n\t\t\tdecdone=1;\r\n\t\t\tattdone=0;\r\n\t\t\tif((latch+(env==0))>1) upda = 0;\r\n\t\t}\r\n\t}\r\n}else{\r\n\ttrig += levscale;\r\n\tif((v!=oov)||(p!=op)){//(delta(trig>0)==1)){//trigger behaviour\r\n\t\tif(trig>0){\r\n\t\t\top=p;\r\n\t\t\tattdone=0;\r\n\t\t\tdecdone=1;\r\n\t\t\tif(latch != 0) upda = 0;\r\n\t\t\toov=v;\r\n\t\t\tov = levscale+ac*env;\r\n\t\t\tov = clip(ov,-4,4);\r\n\t\t\tov = ov - (ov*ov*ov*0.04166666);\r\n\t\t\ttarget=ov;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nif(panic) {\r\n\ttarget=0;\r\n\tattdone=1;\r\n\tdecdone=0;\r\n\tdecrate=-0.001;\r\n\tenv*=0.999;\r\n}\r\nif(damp>0){\r\n\tattdone = 1;\r\n\tdecdone = 0;\r\n\ttarget = 0;\r\n}\r\n\r\nif(!attdone){\r\n\tt=clip(target-env,0,0.9999);\r\n\tif(t>0.0001){\r\n\t\tdx = selector(cu_a,(1-t)*(1-t*cu_f),1+t*(cu_f-1),1+cu_f*(t-1),(t+0.01)*(1+cu_f*(t-0.99)));//,(t+0.1)*(t+0.01));\r\n\t\tdx*=attrate;\r\n\t\tdx=clip(dx,0.0000001,t);\r\n\t\tenv+=dx;\r\n\t}else{\r\n\t\tenv=target;\r\n\t\tattdone=1;\r\n\t\tdecdone=0;\r\n\t\ttarget = (su>0)* v;\r\n\t}\r\n}\r\nif(!decdone){\r\n\tt=clip(target-env,-0.9999,0.9999);\r\n\tif(t<-0.001){\r\n\t\tdx = selector(cu_t,((t+1)*(t+1)-1)*(1-cu_f)+cu_f*t,t-cu_f*(t+1),-1-cu_f*t,-1-t*(1+cu_f+cu_f*t));\r\n\t\tdx*= -decrate;\r\n\t\tdx=clip(dx,t,-0.0000000001);\r\n\t\tenv+=dx;\r\n\t}else{\r\n\t\tenv=target;\r\n\t\tdecdone=1;\r\n\t\tif(lo){\r\n\t\t\tov = ov*lo;\r\n\t\t\tif(ov>0.001){\r\n\t\t\t\tattdone=0;\r\n\t\t\t\ttarget=ov*lo;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nx = x - onepole(x, cutoff = hpf*(1+hpf_e*env));\r\n//env = twopole_lp(env, cutoff=12000);\r\nout1 = slide(mgain,1000,1000)*x*(env+vcaoff);\r\nout2 = env;",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 44.0, 656.0, 507.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 50.0, 557.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
 ],
		"originid" : "pat-6660"
	}

}
