{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 5,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 134.0, 134.0, 1036.0, 595.0 ],
		"gridsize" : [ 15.0, 15.0 ],
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 895.0, 14.0, 28.0, 22.0 ],
					"text" : "in 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 819.0, 578.000004649162292, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 819.0, 14.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "require \"osc_functions\";\r\n\r\nonepole(input){\r\n\tHistory y0(0);\r\n\r\n\tParam cutoff(1000, max=20000, min=1);\r\n\r\n\tcoeff_a = clip(sin(abs(cutoff) * 2 * PI / samplerate), 0, 1);\r\n\tmix5 = mix(y0, input, coeff_a);\r\n\ty0 = fixdenorm(mix5);\r\n\treturn mix5;\r\n}\r\n\r\n//require \"filter_functions\";\r\nBuffer shape(\"osc_shape_lookup\");\r\nBuffer mtof_lookup(\"mtof_lookup\");\r\nBuffer prm(\"voice_parameter_buffer\");\r\nBuffer detuning(\"detuning\");\r\n\r\nHistory cursor_s(0);\r\nHistory cursor_p(0);\r\nHistory ws,range,p_unstab,s_unstab,detune,fmmode,ou2,cr,sr,porta,sha,sha_off,expfm;\r\nHistory att,su,dec,cu,lo,ve,ac,cu_t(0),cu_f(0),mgain,cu_ta(0);\r\nHistory vs,vra,va,vr,es,ep,mv,env_t(1);\r\nHistory ov(0);  //last non-zero velocity\r\nHistory oov(0); //just for detect change\r\nHistory otrig(0); //likewise\r\nHistory op(0); //old pitch\r\nHistory env(0);\r\nHistory attdone(1); \r\nHistory decdone(1); \r\nHistory target(0);\r\nHistory attrate(0.00001); \r\nHistory decrate(0.00001);\r\nHistory upda(0);\r\n//History osc(0);\r\n\r\nParam voice_offset(0);\r\nParam voice_is(0, min=0,default=0,max=4096);\r\nParam p(0,min=0,default=64,max=128);\r\nParam v(0);\r\nParam panic(0);\r\nParam latch(0);\r\nParam cont(1);\r\n\r\ncursor_p += 0.00001/(voice_is+20);\r\n\r\nif(upda==0){\r\n\tupda = 1;\r\n\tws = peek(prm,0+voice_offset, 0, channels=1);\r\n\trange = 12*floor((peek(prm,1+voice_offset, 0, channels=1)*18 - 16));\r\n\tp_unstab = peek(prm,2+voice_offset, 0);\r\n\tp_unstab *= p_unstab*p_unstab*20;\r\n\tcr = p_unstab/(voice_is*5180+1000);\r\n\ts_unstab = peek(prm,3+voice_offset, 0);\r\n\ts_unstab *= s_unstab*8;\r\n\tsr = s_unstab/(voice_is*3260+4200);\r\n\tdetune = 48*(peek(prm,4+voice_offset, 0)-0.5);\r\n\tfmmode = peek(prm,5+voice_offset, 0);\r\n\tatt = peek(prm, 6+voice_offset, 0, channels=1);\r\n\tsu = peek(prm, 7+voice_offset, 0, channels=1);\r\n\tdec = peek(prm, 8+voice_offset, 0, channels=1);\r\n\tcu = peek(prm, 9+voice_offset, 0, channels=1);\r\n\tlo = peek(prm, 10+voice_offset, 0, channels=1);\r\n\tve = peek(prm, 11+voice_offset, 0, channels=1)*2 - 1;\r\n\tac = peek(prm, 12+voice_offset, 0, channels=1)*2 - 1;\t\r\n\tporta = 100*peek(prm,13+voice_offset,0, channels=1);\r\n\tmgain = 4*peek(prm,14+voice_offset,0, channels=1)-2;\r\n\tvs = peek(prm, 15+voice_offset, 0, channels=1)*2 - 1;\r\n\tvra = peek(prm, 16+voice_offset, 0, channels=1)*16 - 8;\r\n\tva = peek(prm, 17+voice_offset, 0, channels=1)*1.98 - 0.99;\r\n\tvr = peek(prm, 18+voice_offset, 0, channels=1)*1.98 - 0.99;\r\n\tes = peek(prm, 19+voice_offset, 0, channels=1)*2 - 1;\r\n\tep = peek(prm, 20+voice_offset, 0, channels=1)*8 - 4;\r\n\tsame = peek(prm, 21+voice_offset, 0, channels=1)>0.5;\r\n\tep = ep*ep*ep*ep*ep*12;\r\n\texpfm = ((fmmode>=0.25)&&(fmmode<0.5)) * 128;\r\n\tcu_f=cu*4;\t\r\n\tcu_t=floor(cu_f);\r\n\tcu_f-=cu_t;\r\n\tcu_t+=1;\r\n\tcu_ta = (same)? cu_t : (5-cu_t);\r\n\tenv_t=1+abs(cu-0.45)*23;\r\n\tat = (pow(1000,clip(att+ va*mv,0,1))-1+0.0000000001)*60.06006006006006006006006006006;\r\n\tde = (pow(1000,clip(dec+ vr*mv,0,1))-1+0.0000000001)*60.06006006006006006006006006006;\r\n\tattrate=env_t/mstosamps(at);\r\n\tdecrate=-env_t/mstosamps(de);\t\r\n\tporta = porta*porta;\r\n\tporta = mstosamps(porta);\t\r\n}\r\n\r\nupda = (upda + cont);// & 255;\r\nupda = (upda < vectorsize) ? upda : 0;\r\n\r\n\r\n\r\ncursor_p += 0.000001*cr;\r\ncursor_s += sr;\r\ncursor_p=wrap(cursor_p);\r\ncursor_s=wrap(cursor_s);\r\n\r\npink_s = sample(detuning,cursor_s,0);\r\npink_p = sample(detuning,cursor_p,0);\r\n\r\nsh = ws + s_unstab*pink_s + vs*mv + es*env;\r\n//sh += in2;\r\nsdif = sh+sha_off - sha;\r\nif(sdif>0.5) sha_off-=1;\r\nif(sdif<-0.5) sha_off+=1;\r\nsha = in2+slide(sh + sha_off,500,500);\r\n\r\nsin_l, tri_l, rec_l, pw = sample(shape, wrap(sha) , 0, channels=4);\r\n\r\n//pitch = peek(mtof_lookup,slide(p,porta,porta), (voice_is % 8), channels=1, interp = \"spline\");\r\n\r\n//pit = pitch * pow(2, (slide(p_unstab,100,100)*pink_p/2)+(slide(detune,100,100)*4)+range);\r\n//pit = clip(abs(pit),0,samplerate/3);\r\npitch = slide(p,porta,porta) + (slide(p_unstab,100,100)*pink_p)+range+12*floor(vra*mv)+(slide(detune,100,100)) + env*ep + expfm * in1;\r\ntra=1;\r\nif(pitch<0){\r\n\ttra = floor(-pitch/12)+1;\r\n\tpitch += 12*tra;\r\n\ttra = pow(2, -tra);\r\n}else{\r\n\tif(pitch>128) pitch=128;\r\n}\r\npit = tra*peek(mtof_lookup,pitch, (voice_is % 8), channels=1, interp = \"linear\");\r\n\r\ntrig=0;\r\nvi=0;\r\nif((delta(lo>0)>0)&&(env==0)){\r\n\tvi=1;\r\n\ttrig=1;\r\n\tupda = 0;\r\n}\r\nlevscale = 0;\r\n\r\nif(v>0){\r\n\tlevscale = v * ve + (1-clip(ve,0,2));\r\n\tmv = levscale;\r\n}else if(v<0){\r\n\tlevscale = -v * ve + (1-clip(ve,0,2));\r\n\tsu=0;\r\n\tmv = -levscale;\r\n}\r\nnewnote = 0;\r\nif((su > 0) && (v >= 0)){\r\n\tvi += levscale; \r\n\tif(vi != oov){ //follow behaviour\r\n\t\toov = vi;\r\n\t\tov = vi;\r\n\t\tat = (pow(1000,clip(att+ va*mv,0,1))-1+0.0000000001)*60.06006006006006006006006006006;\r\n\t\tde = (pow(1000,clip(dec+ vr*mv,0,1))-1+0.0000000001)*60.06006006006006006006006006006;\r\n\t\tattrate=env_t/mstosamps(at);\r\n\t\tdecrate=-env_t/mstosamps(de);\r\n\t\ttarget = vi;\r\n\t\tif(target <= env){\r\n\t\t\tattdone = 1;\r\n\t\t\tdecdone = 0;\r\n\t\t\tif((target == 0)&&(latch>2)) upda = 0;\r\n\t\t}else{\r\n\t\t\tif(attdone && (at<10)) newnote = (target*0.35)>(env); //if the jump is bigger up than the current env then a phase reset is a smaller click than not (is my theory)\r\n\t\t\tdecdone = 1;\r\n\t\t\tattdone = 0;\r\n\t\t\tif((latch+(env==0))>1) upda = 0;\r\n\t\t}\r\n\t}\r\n}else{\r\n\ttrig += levscale;\r\n\tif((v != oov)||(p != op)){//(delta(trig>0)==1)){//trigger behaviour\r\n\t\tif(trig > 0){\r\n\t\t\top = p;\r\n\t\t\tif(latch != 0) upda = 0;\r\n\t\t\toov = v;\r\n\t\t\tov = levscale+ac*env;\r\n\t\t\tov = clip(ov,-4,4);\r\n\t\t\tov = ov - (ov * ov * ov * 0.04166666);\r\n\t\t\ttarget = ov;\r\n\t\t\tmv = ov;\r\n\t\t\tat = (pow(1000,clip(att+ va*mv,0,1))-1+0.0000000001)*60.06006006006006006006006006006;\r\n\t\t\tde = (pow(1000,clip(dec+ vr*mv,0,1))-1+0.0000000001)*60.06006006006006006006006006006;\r\n\t\t\tattrate=env_t/mstosamps(at);\r\n\t\t\tdecrate=-env_t/mstosamps(de);\r\n\t\t\tif(attdone && (at<20)) newnote = (target*0.35)>(env); //if the jump is bigger up than the current env then a phase reset is a smaller click than not (is my theory)\r\n\t\t\tattdone = 0;\r\n\t\t\tdecdone = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nif(panic) {\r\n\ttarget = 0;\r\n\tdecdone = 0;\r\n\tdecrate = -0.001;\r\n\tenv *= 0.999;\r\n}\r\n\r\nif(!attdone){\r\n\tt=clip(target-env,0,0.9999);\r\n\tif(t>0.0001){\r\n\t\tdx = selector(cu_ta,(1-t)*(1-t*cu_f),1+t*(cu_f-1),1+cu_f*(t-1),(t+0.01)*(1+cu_f*(t-0.99)));//,(t+0.1)*(t+0.01));\r\n\t\tdx*=attrate;\r\n\t\tdx=clip(dx,0.0000001,t);\r\n\t\tenv+=dx;\r\n\t}else{\r\n\t\tenv=target;\r\n\t\tattdone=1;\r\n\t\tdecdone=0;\r\n\t\ttarget = su * mv;\r\n\t}\r\n}\r\nif(!decdone){\r\n\tt=clip(target-env,-0.9999,0.9999);\r\n\tif(t<-0.0001){\r\n\t\tdx = selector(cu_t,((t+1)*(t+1)-1)*(1-cu_f)+cu_f*t,t-cu_f*(t+1),-1-cu_f*t,-1-t*(1+cu_f+cu_f*t));\r\n\t\tdx*= -decrate;\r\n\t\tdx=clip(dx,t,-0.0000000001);\r\n\t\tenv+=dx;\r\n\t}else{\r\n\t\tenv=target;\r\n\t\tdecdone=1;\r\n\t\tif(lo){\r\n\t\t\tov = ov*lo;\r\n\t\t\tif(ov>0.001){\r\n\t\t\t\tattdone=0;\r\n\t\t\t\ttarget=ov*lo;\r\n\t\t\t}\r\n\t\t}/*else{\r\n\t\t\tmv=0;\r\n\t\t}*/\r\n\t}\r\n}\r\n\r\nrec=0; sinph=0; saw = 0;\r\ndelt = newnote || (delta(in3!=0)>0)  || (attdone && decdone && (env==0));\r\nif(fmmode<0.25){\r\n\trec =  eptr_rect2(pit,in1,pw, delt);\r\n\tsinph = phasor(pit*(1+in1),delt);\r\n\tsaw =  integrator_saw(rec, pit*(1+in1), pw, delt);\r\n}else if(fmmode<0.5){\r\n\trec =  eptr_rect2(pit,0,pw, delt);\r\n\tsinph = phasor(pit,delt);\r\n\tsaw =  integrator_saw(rec, pit, pw, delt);\r\n}else if(fmmode<0.75){\r\n\tdelt = (delta(in1!=0)>0) || delt;\r\n\trec =  eptr_rect(pit,in1+delt,pw, sync=1);\r\n\tsinph = phasor(pit,delt);\r\n\tsaw =  integrator_saw(rec, pit*(1+in1), pw, delt);\r\n}else { \r\n\tdelt = (delta(in1!=0)>0) || delt;\r\n\trec =  eptr_rect(pit,in1+delt,pw, sync=2);\r\n\tsinph = phasor(pit*(1+in1),delt);\r\n\tsaw =  integrator_saw(rec, pit*(1+in1), pw, delt);\r\n}\r\nosc =  sin_l * cycle(sinph+0.75,index = \"phase\");\r\nosc += tri_l * saw + rec_l * rec;\r\n\r\nout1 = slide(mgain,1000,1000)*osc*env;\r\nout2 = env;",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 3,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 38.0, 966.0, 523.666671097278595 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 50.0, 578.000004649162292, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 2 ],
					"source" : [ "obj-5", 0 ]
				}

			}
 ],
		"originid" : "pat-5956"
	}

}
