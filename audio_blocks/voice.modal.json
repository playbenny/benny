{
	"voice.modal" : {
		"patcher" : "voice.modal",
		"type" : "audio",
		"synonyms" : ["resonator","xylophone","marimba","physical","string","membrane"],
		"block_ui_patcher" : "blank.ui",
		"help_text" : "Simple voice made around a bank of resonators and a selection of model algorithms for setting the frequencies, amplitudes and bandwidths of those resonators. Works as a voice you can play with midi input but also as an effect, and can be used to model body resonances for physical modelling patches.££Models come from an article by Nathan Ho apart from the two measured violin body resonances which come from a paper by Holm & Välimäki and some measurements taken from a bell in a post online, links in the patcher.££-Elements string££-Piano stiff string££-Free Beam (eg xylophone)££-Cantilever Beam (eg mbira)££-Rectangular Membrane££-Rectangular clamped plate££-Tubular bell££-Free Plate££-Good violin££-Bad violin££-Measured bell",
		"max_polyphony" : 0,
		"upsample" : 1,
		"connections" : {
			"in" : { 
				"audio" : [ "feed in", "fm" ],
				"midi" : [ "notes in" ]
			},
			"out" : {
				"audio" : [ "osc" ],
				"midi" : [ "through"]
			}
		},
		"groups" : [
			{ 
				"contains" : [0,0,0],
				"height" : 2,
				"colour" : -3
			},
			{
				"contains" : [1,2,3],
				"height" : 0
			},
			{
				"contains" : [6, 7,8,4,5],
				"colour" : 3,
				"height" : 0
			},
			{
				"contains" : [11,12,9,10],
				"colour" : 6,
				"height" : 0
			}
		],
		"parameters" : [
			{
				"name" : "frequency_distribution_model",
				"type" : "menu_l",
				"values" : ["elements", "stiff_string", "free_beam", "cantilevered_beam", "rectangular_membrane", "rectangular_clamped plate", "tubular_bell", "clamped_tube", "free_plate", "good_violin", "bad_violin", "measured bell"],
				"wrap" : 1,
				"columns" : 3,
				"default" : 0
			},
			{
				"name" : "inharmonicity",
				"type" : "float",
				"values" : ["uni", 0, 2, "exp100"],
				"wrap" : 0,
				"default" : 0.02 
			},
			{
				"name" : "pitch_env_amount",
				"type" : "float",
				"values" : ["uni", 0, 16, "exp"],
				"wrap" : 0,
				"default" : 0 
			},
			{
				"name" : "pitch_env_time",
				"type" : "float",
				"values" : ["uni", 0, 500, "lin"],
				"wrap" : 0,
				"default" : 0
			},
			{
				"name" : "strike_position",
				"type" : "float",
				"values" : ["uni", 0, 1, "lin"],
				"wrap" : 0,
				"default" : 0.37
			},
			{
				"name" : "position_variation",
				"type" : "float",
				"values" : ["uni", 0, 1, "lin"],
				"wrap" : 0,
				"default" : 0.2 
			},
			{
				"name" : "resonator_bandwidth",
				"type" : "float",
				"values" : ["uni", 0, 10, "exp1000"],
				"wrap" : 0,
				"default" : 0.1 
			},
			{
				"name" : "harmonic_rolloff",
				"type" : "float",
				"values" : ["uni", 0, 1, "lin"],
				"wrap" : 0,
				"default" : 0.4 
			},
			{
				"name" : "tone_key_follow",
				"type" : "float",
				"values" : ["uni", 0, 1, "lin"],
				"wrap" : 0,
				"default" : 0.05
			},
			{
				"name" : "selfmod/feedback",
				"type" : "float",
				"error_scale" : 0,
				"values" : ["bi", -1, 1, "exp100"],
				"wrap" : 0,
				"default" : 0.5
			},
			{
				"name" : "gain",
				"type" : "float",
				"values" : ["bi", -2, 2, "lin" ],
				"wrap" : 0,
				"default" : 0.75,	
				"error_scale" : 0.3
			},
			{
				"name" : "octave",
				"type" : "int",
				"values" : ["bi", -8, 8, "lin"],
				"wrap" : 0,
				"default" : 0.5,
				"error_scale" : 0.3
			},
			{
				"name" : "detune",
				"type" : "float",
				"values" : ["bi", -24, 24, "lin"],
				"wrap" : 0,
				"default" : 0.5,
				"error_scale" : 0.1
			}
		]
	}
}