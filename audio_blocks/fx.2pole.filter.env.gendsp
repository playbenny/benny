{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 4,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 134.0, 134.0, 1061.0, 595.0 ],
		"gridsize" : [ 15.0, 15.0 ],
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-3",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 614.0, 573.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "require \"sm_sallenkey_functions\";\r\nBuffer prm(\"voice_parameter_buffer\");\r\nParam voice_offset(0);\r\nParam tr(0);\r\nParam v(0);\r\nParam panic(0);\r\nParam p(0);\r\n\r\nHistory ov(0);  //last non-zero velocity\r\nHistory oov(0); //just for detect change\r\nHistory otrig(0); //likewise\r\nHistory env(0);\r\nHistory attdone(1); \r\nHistory decdone(1); \r\nHistory target(0);\r\nHistory attrate(0.00001); \r\nHistory decrate(0.00001);\r\nHistory upda(0);\r\nHistory c, cmod, cut,res,drv,mix,at,su,de,cu,lo,ve,ac,cu_t(0),cu_a(0),cu_f(0),kf;\r\n\r\nif(upda<=0){\r\n\tupda = vectorsize + 7;\r\n\tc = peek(prm,voice_offset, 0, channels=1);\r\n\tcmod = peek(prm,1+voice_offset, 0, channels=1);\r\n\tres = clip(peek(prm,2+voice_offset, 0, channels=1),0,0.99);\r\n\tdrv = (peek(prm,3+voice_offset, 0, channels=1)>0.5);\r\n\tmix = peek(prm,4+voice_offset, 0, channels=1);\r\n\tat = peek(prm, 5+voice_offset, 0, channels=1);\r\n\tat = (pow(1000,at)-1+0.0000000001)*60.06006006006006006006006006006;\r\n\tsu = peek(prm, 6+voice_offset, 0, channels=1);\r\n\tde = peek(prm, 7+voice_offset, 0, channels=1);\r\n\tde = (pow(1000,de)-1+0.0000000001)*60.06006006006006006006006006006;\r\n\tcu = peek(prm, 8+voice_offset, 0, channels=1);//*2 - 1;\r\n\tlo = peek(prm, 9+voice_offset, 0, channels=1);\r\n\tve = peek(prm, 10+voice_offset, 0, channels=1)*2 - 1;\r\n\tac = peek(prm, 11+voice_offset, 0, channels=1)*2 - 1;\r\n\tkf = peek(prm, 12+voice_offset, 0, channels=1)*2 - 1;\r\n\tsame = peek(prm, 12+voice_offset, 0, channels=1)>0.5;\r\n\tkf/= 64;\t\r\n\tcu_f=cu*4;\t\r\n\tcu_t=floor(cu_f);\r\n\tcu_f-=cu_t;\r\n\tcu_t+=1;\r\n\tcu_a = same ? cu_t : (5- cu_t);\r\n\tt=1+abs(cu-0.45)*23;\r\n\tattrate=t/mstosamps(at);\r\n\tdecrate=-t/mstosamps(de);\t\r\n}\r\nupda-=1;\r\nvi=0;\r\nlevscale = 0;\r\ntrig=tr*attdone;\r\nif((delta(lo>0)>0)&&(env==0)){\r\n\ttrig=1;\r\n}\r\n\r\nif(panic) {\r\n\ttarget=0;\r\n\tdecdone=0;\r\n\tdecrate=-0.001;\r\n\tenv*=0.999;\r\n}\r\n\r\nif(v>0){\r\n\tlevscale = v * ve + (1-clip(ve,0,2));\r\n\tif(su>0){\r\n\t\tvi += levscale; \r\n\t}else{\r\n\t\ttrig += levscale;\r\n\t}\r\n}else if(tr>0){\r\n\tlevscale = tr * ve + (1-clip(ve,0,2));\r\n\t\r\n}else{\r\n\tif((attdone) && (su>0)){\r\n\t\ttarget = 0;\r\n\t\tdecdone = 0;\r\n\t}\r\n}\r\n\r\nif(vi!=oov){ //follow behaviour\r\n\toov=vi;\r\n\tov=vi;\r\n\ttarget=vi;\r\n\tif(target<=env){\r\n\t\tattdone=1;\r\n\t\tdecdone=0;\r\n\t}else{\r\n\t\tdecdone=1;\r\n\t\tattdone=0;\r\n\t}\r\n}\r\nif((delta(trig>0)==1)&&(attdone==1)){//trigger behaviour\r\n\tif(trig>0){\r\n\t\tattdone=0;\r\n\t\tdecdone=1;\r\n\t\tov = levscale+ac*env;\r\n\t\tov /= 2;\r\n\t\tov = clip(ov,-2,2);\r\n\t\tov = ov - (ov*ov*ov/3);\r\n\t\tov *= 2;\r\n\t\ttarget=ov;\r\n\t}\r\n}\r\nif(!attdone){\r\n\tt=clip(target-env,-1,1);\r\n\tif(t>0.00001){\r\n\t\tdx = selector(cu_a,(1-t)*(1-t*cu_f),1+t*(cu_f-1),1+cu_f*(t-1),(t+0.01)*(1+cu_f*(t-0.99)));//,(t+0.1)*(t+0.01));\r\n\t\tdx*=attrate;\r\n\t\tdx=clip(dx,0.0000001,t);\r\n\t\tenv+=dx;\r\n\t}else{\r\n\t\tenv=target;\r\n\t\tattdone=1;\r\n\t\tdecdone=0;\r\n\t\ttarget = su*v;\r\n\t}\r\n}\r\nif(!decdone){\r\n\tt=clip(target-env,-1,1);\r\n\tif(t<-0.001){\r\n\t\tdx = selector(cu_t,((t+1)*(t+1)-1)*(1-cu_f)+cu_f*t,t-cu_f*(t+1),-1-cu_f*t,-1-t*(1+cu_f+cu_f*t));\r\n\t\tdx*= -decrate;\r\n\t\tdx=clip(dx,t,-0.0000000001);\r\n\t\tenv+=dx;\r\n\t}else{\r\n\t\tenv=target;\r\n\t\tdecdone=1;\r\n\t\tif(lo){\r\n\t\t\tov = ov*lo;\r\n\t\t\tif(ov>0.001){\r\n\t\t\t\tattdone=0;\r\n\t\t\t\ttarget=ov*lo;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncut = clip(440*pow(2,(slide(c,1000,1000)+in2+cmod*env+kf*p)*16-8), 1, 20000);\r\n\r\nflp,fbp,fhp = skfTanNltoCoefMulti(in1,cut,slide(res,1000,1000),drv);\r\nm = slide(mix,1000,1000);\r\nout1 = flp*(1-m)+fhp*m;\r\nout2 = fbp;",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-5",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 46.0, 583.0, 512.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 614.0, 14.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 46.5, 573.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-5", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-5", 0 ]
				}

			}
 ],
		"originid" : "pat-6632"
	}

}
