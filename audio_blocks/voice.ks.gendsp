{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 3,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 134.0, 134.0, 1852.0, 921.0 ],
		"gridsize" : [ 15.0, 15.0 ],
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 819.0, 873.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 819.0, 14.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "require \"osc_functions\";\r\nrequire \"filter_functions\";\r\nBuffer shape(\"osc_shape_lookup\");\r\nBuffer mtof_lookup(\"mtof_lookup\");\r\nBuffer prm(\"voice_parameter_buffer\");\r\nBuffer detuning(\"detuning\");\r\n\r\nDelay delA(samplerate);\r\n\r\nHistory cursor_s(0);\r\nHistory cursor_p(0);\r\nHistory feedback,damping,range,p_unstab,noisemod,selfmod,detune,porta,plucktone,envshape,gain;\r\nHistory at,de,cu,lo,ve,ac,cu_t(0),cu_f(0),cr,mgain,hpf;\r\nHistory ov(0);  //last non-zero velocity\r\nHistory oov(0); //just for detect change\r\nHistory otrig(0); //likewise\r\nHistory op(0); //old pitch\r\nHistory env(0);\r\nHistory attdone(1); \r\nHistory decdone(1); \r\nHistory target(0);\r\nHistory attrate(0.00001); \r\nHistory decrate(0.00001);\r\nHistory upda(0);\r\nHistory sigg(0);\r\nHistory sawbend(0);\r\n\r\nParam voice_offset(0);\r\nParam voice_is(0, min=0,default=0,max=4096);\r\nParam p(0,min=0,default=64,max=128);\r\nParam v(0);\r\nParam panic(0);\r\nParam latch(0);\r\nParam cont(1);\r\n\r\ncursor_p += 0.00001/(voice_is+20);\r\n\r\nif(upda==0){\r\n\tupda=1;\r\n\tfeedback = peek(prm,0+voice_offset, 0, channels=1)*1.2;\r\n\tdamping = peek(prm,1+voice_offset, 0, channels=1);\r\n\trange = 12*floor((peek(prm,2+voice_offset, 0, channels=1)*18 - 16));\r\n\tp_unstab = peek(prm,3+voice_offset, 0);\r\n\tp_unstab *= p_unstab*p_unstab*0.5;\r\n\tcr = p_unstab/(voice_is*5180+1000);\r\n\tnoisemod = peek(prm,4+voice_offset, 0)/256;\r\n\tselfmod = peek(prm,5+voice_offset, 0);\r\n\tselfmod = (selfmod-0.5)*0.0625;\r\n\tdetune = 48*(peek(prm,6+voice_offset, 0)-0.5);\r\n\tporta = peek(prm,7+voice_offset, 0);\r\n\tplucktone = 3* peek(prm,8+voice_offset, 0);\r\n\tenvshape = peek(prm,9+voice_offset, 0);\r\n\tmgain = 4*peek(prm,10+voice_offset,0, channels=1)-2;\r\n\tsawbend = 2*peek(prm,11+voice_offset,0, channels=1)-1;\r\n\tsawbend = pow(2, sawbend);\r\n\tde = 0.1+ 100*envshape*envshape;\r\n\tat = 0.1+500*(1-envshape)*(1-envshape);\r\n\tsu=0;\r\n\tlo=0;\r\n\tve=1;\r\n\tac=1;\r\n\tcu=0.2;\t\r\n\tcu_f=cu*4;\t\r\n\tcu_t=floor(cu_f);\r\n\tcu_f-=cu_t;\r\n\tcu_t+=1;\r\n\tt=1+abs(cu-0.45)*23;\r\n\tattrate=t/mstosamps(at);\r\n\tdecrate=-t/mstosamps(de);\t\r\n\tporta = porta*porta*10000;\r\n\tporta = mstosamps(porta);\t\r\n\t//mgain = 4*peek(prm,14+voice_offset,0, channels=1)-2;\r\n\thpf = 2 * peek(prm,12+voice_offset,0, channels=1)- 1;\r\n\tif(hpf>0){\r\n\t\thpf = 4*(pow(2,hpf) - 1);\r\n\t}else if(hpf<0){\r\n\t\thpf = -4*(pow(2,-hpf) - 1);\r\n\t}\r\n}\r\n\r\nupda = (upda + cont);// & 255;\r\nupda *= (upda < vectorsize);\r\n\r\n\r\ncursor_p += 0.000001*cr;\r\ncursor_p=wrap(cursor_p);\r\n\r\npink_p = sample(detuning,cursor_p,0);\r\n\r\npitch = slide(p,porta,porta) + (slide(p_unstab,100,100)*pink_p)+range+(slide(detune,100,100));\r\ntra=1;\r\nif(pitch<0){\r\n\ttra = floor(-pitch/12);\r\n\tpitch += 12*tra;\r\n\ttra = pow(2, -tra);\r\n}else{\r\n\tif(pitch>128) pitch=128;\r\n}\r\n\r\nsm = sigg*selfmod;\r\nif(selfmod<0) sm = clip(-sm, 0 , 999);\r\nsm += noisemod*noise();\r\nsm += in1 + 1;\r\n\r\npit = tra*peek(mtof_lookup,pitch*sm, (voice_is % 8), channels=1, interp = \"linear\");\r\n\r\n\r\ndel = samplerate / pit;\r\n\r\n\r\ntrig=0;\r\nvi=0;\r\nif((delta(lo>0)>0)&&(env==0)){\r\n\tvi=1;\r\n\ttrig=1;\r\n\tupda=0;\r\n}\r\nlevscale = 0;\r\n\r\nif(v>0){\r\n\tlevscale = v * ve + (1-clip(ve,0,2));\r\n}\r\n\r\nif(su>0){\r\n\tvi += levscale; \r\n\tif(vi!=oov){ //follow behaviour\r\n\t\toov=vi;\r\n\t\tov=vi;\r\n\t\ttarget=vi;\r\n\t\tif(target<=env){\r\n\t\t\tattdone=1;\r\n\t\t\tdecdone=0;\r\n\t\t\tif((target == 0)&&(latch>2)) upda = 0;\r\n\t\t}else{\r\n\t\t\tdecdone=1;\r\n\t\t\tattdone=0;\r\n\t\t\tif((latch+(env==0))>1) upda = 0;\r\n\t\t}\r\n\t}\r\n}else{\r\n\ttrig += levscale;\r\n\tif((v!=oov)||(p!=op)){//(delta(trig>0)==1)){//trigger behaviour\r\n\t\tif(trig>0){\r\n\t\t\top=p;\r\n\t\t\tattdone=0;\r\n\t\t\tdecdone=1;\r\n\t\t\tif(latch != 0) upda = 0;\r\n\t\t\toov=v;\r\n\t\t\tov = levscale+ac*env;\r\n\t\t\tov = clip(ov,-4,4);\r\n\t\t\tov = ov - (ov*ov*ov*0.04166666);\r\n\t\t\ttarget=ov;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nif(panic) {\r\n\ttarget=0;\r\n\tdecdone=0;\r\n\tdecrate=-0.001;\r\n\tenv*=0.999;\r\n}\r\n\r\nif(!attdone){\r\n\tt=clip(target-env,0,0.9999);\r\n\tif(t>0.0001){\r\n\t\tdx = selector(cu_t,(1-t)*(1-t*cu_f),1+t*(cu_f-1),1+cu_f*(t-1),(t+0.01)*(1+cu_f*(t-0.99)));//,(t+0.1)*(t+0.01));\r\n\t\tdx*=attrate;\r\n\t\tdx=clip(dx,0.0000001,t);\r\n\t\tenv+=dx;\r\n\t}else{\r\n\t\tenv=target;\r\n\t\tattdone=1;\r\n\t\tdecdone=0;\r\n\t\ttarget = su * v;\r\n\t}\r\n}\r\nif(!decdone){\r\n\tt=clip(target-env,-0.9999,0.9999);\r\n\tif(t<-0.001){\r\n\t\tdx = selector(cu_t,((t+1)*(t+1)-1)*(1-cu_f)+cu_f*t,t-cu_f*(t+1),-1-cu_f*t,-1-t*(1+cu_f+cu_f*t));\r\n\t\tdx*= -decrate;\r\n\t\tdx=clip(dx,t,-0.0000000001);\r\n\t\tenv+=dx;\r\n\t}else{\r\n\t\tenv=target;\r\n\t\tdecdone=1;\r\n\t\tif(lo){\r\n\t\t\tov = ov*lo;\r\n\t\t\tif(ov>0.001){\r\n\t\t\t\tattdone=0;\r\n\t\t\t\ttarget=ov*lo;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nimpl = clip(1- plucktone,0,1)+clip(1- abs(plucktone-3),0,1);\r\nnoil = clip(1 - abs(plucktone-1),0,1);\r\nsawl = clip(1 - abs(plucktone-2),0,1);\r\n\r\nsigg = impl+noil*noise()+sawl*phasor(pit*sawbend);\r\nsigg *=env;\r\nsigg += feedback * interp(damping,delA.read(del),delA.read(del+1));\r\nsigg += clip(in2,-1.5,1.5);\r\nif(hpf>0){\r\n\tsigg = sigg - onepole(sigg, cutoff=pit*hpf);\r\n}\r\nsigg = fixdenorm(dcblock(sigg - (sigg*sigg*sigg/3)));\r\n\r\ndelA.write(sigg);\r\n\r\nif(hpf<0){\r\n\tsigg = sigg - onepole(sigg, cutoff=-pit*hpf);\r\n\tsigg = sigg - onepole(sigg, cutoff=-pit*hpf*0.9);\r\n}\r\nout1= sigg;\r\nout2 = sigg;\r\n//env = twopole_lp(env, cutoff=8000);\r\nosc=0;\r\n//out1 = slide(mgain,1000,1000)*twopole_lp(osc, cutoff=12000)*twopole_lp(env, cutoff=8000);\r\n//out2 = env;",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 78.0, 1399.0, 769.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 50.0, 873.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
 ],
		"originid" : "pat-3834",
		"oscreceiveudpport" : 0
	}

}
