{
	"core.input.control.auto" : {
		"patcher" : "core.input.control",
		"type" : "note",
		"block_ui_patcher" : "core.input.control.auto.ui",
		"ui_in_sidebar_height":10,
		"show_states_on_custom_view":1,
		"help_text" : "Midi controller input with optional automapping.££The values from your midi controller's knobs and sliders are output by this block so you can use them to modulate parameters etc. ££You can save a starting position for all, or in 'edit mode' you can save those individually. Edit mode also lets you assign colours to knobs (for controllers like the midi fighter twister / launch control xl 3 that have rgb leds) and also for controllers that have encoders or motorised pots you can set up 'end zone forces' - areas at either end of the range that either repel or attract the fader position. This is useful eg for delay feedback controls - you can set it to turn itself down if you forget to (!).££For standard potentiometers benny has a (unique?) smart soft pickup system, where fader curves are recalibrated around the current position and the actual value, so as well as avoiding jumps there are no dead zones (like normal soft pickup faders) - increasing the knob always increases the value & the converse.££If auto assign is turned on then when a block is selected the controller will auto assign to this block's parameters. When you deselect the block the midi controller goes back to it's normal mode - outputting values from this block. ££You can only have one of these core.input.control.auto blocks per song, for other midi controllers use the core.input.control.basic block.",
		"exclusive" : 1,
		"max_polyphony" : 1,
		"connections" : {
			"in" : {
				"midi" : ["loop record button"]
			},
			"out" : {
				"parameters" : [ "1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64" ],
				"midi" : ["button 1", "button 2", "button 3", "button 4", "button 5","button 6","button 7","button 8","button 9","button 10", "button 11", "button 12", "button 13", "button 14", "button 15", "button 16", "button 17", "button 18", "button 19","button 20","button 21","button 22","button 23","button 24","button 25","button 26","button 27","button 28","button 29", "button 30", "button 31","button 32", "button 33", "button 34", "button 35","button 36","button 37","button 38","button 39","button 40", "button 41", "button 42", "button 43", "button 44", "button 45", "button 46", "button 47", "button 48", "button 49","button 50","button 51","button 52","button 53","button 54","button 55","button 56","button 57","button 58","button 59", "button 60", "button 61", "button 62", "button 63", "button 64"],
				"midi_watched" : [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
			}
		},
		"groups" : [
			{ 
				"contains" : [0,0,1],
				"height" : 0
			}		
		],
		"panel" : {
			"enable" : 1
		},
		"parameters" : [
			{
				"name" : "controller",
				"type" : "menu_d",
				"values" : ["1","2","3", "4", "5", "6", "7", "8"],
				"error_scale" : 0,
				"wrap" : 0,
				"default" : 0,
				"force_label" : 1
			},{
				"name" : "auto assign",
				"type" : "menu_l",
				"values" : ["automap OFF","automap ON"],
				"error_scale" : 0,
				"wrap" : 0,
				"default" : 0.9
			}
		]
	}
}
             