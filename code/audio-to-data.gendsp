{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 4,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 832.0, 119.0, 895.0, 823.0 ],
		"gridsize" : [ 15.0, 15.0 ],
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 652.0, 792.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "//needs to bang out for when it's time to sample for sample-value, and for triggers\r\n\r\nHistory min_slow;\r\nHistory min_fast;\r\nHistory max_slow;\r\nHistory max_fast;\r\nHistory pointer;\r\nHistory count_fast;\r\nHistory count_slow;\r\nHistory value_debounce;\r\nHistory last_out;\r\n\r\nBuffer scopes(\"scope_buffer\");\r\n\r\nParam size(min=16,max=256,default=64);\r\nParam rate(min=1,max=48000,default=10);\r\nParam channel(min=0,max=99999999,default=0);\r\nParam slowrate(1470);\r\n\r\nParam out_value(min=0,max=1,default=0);\r\nParam vis_meter(min=0,max=1,default=0);\r\nParam vis_scope(min=0,max=8,default=0);\r\n\r\nParam rate_limit(min=0,max=10000,default=1600);\r\n\r\nclock_fast = 0;\r\nif(vis_scope){\r\n\tcount_fast+=1;\r\n\tif(count_fast>rate){\r\n\t\tclock_fast = 1;\r\n\t\tcount_fast -= rate;\r\n\t}\r\n\tmin_fast = (in1<min_fast) ? in1 : min_fast;\r\n\tmax_fast = (in1>max_fast) ? in1 : max_fast;\r\n\tif(clock_fast){\r\n\t\tpointer = (pointer + 1) % size;\r\n\t\tschannel = 256*channel;\r\n\t\tpoke(scopes, min_fast, pointer+schannel, 0, 0);\r\n\t\tpoke(scopes, max_fast, pointer+schannel, 1, 0);\r\n\t\tmin_fast = 10;\r\n\t\tmax_fast = -10;\r\n\t}\r\n}else{\r\n\tmin_fast = 10;\r\n\tmax_fast = -10;\r\n}\r\n\r\ncount_slow+=1;\r\nmin_slow = (in1<min_slow) ? in1 : min_slow;\r\nmax_slow = (in1>max_slow) ? in1 : max_slow;\r\nif(count_slow>slowrate){\r\n\tcount_slow=0;\r\n\tpoke(scopes, min_slow, channel, 0, 0);//channel actually used as pointer, channel is 0\r\n\tpoke(scopes, max_slow, channel, 1, 0);\r\n\tmin_slow = 10;\r\n\tmax_slow = -10;\r\n}\r\n\r\nt = slide(abs(in1+10),0,1000)-10;\r\nif((abs((last_out-t)*128)>1) && (out_value) && (value_debounce==0) ){\r\n\tout2=1;\r\n\tlast_out=t;\r\n\tvalue_debounce=rate_limit;\r\n}\r\nif(value_debounce>0) value_debounce-=1;\r\nout1 = t;",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-5",
					"maxclass" : "codebox",
					"numinlets" : 1,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 52.0, 637.0, 724.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 50.0, 792.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-2", 0 ],
					"source" : [ "obj-5", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-5", 0 ]
				}

			}
 ],
		"originid" : "pat-3890",
		"autosave" : 0
	}

}
